{
  "version": 3,
  "sources": ["../../../../src/client/reactivity/reactive.ts", "../../../../src/client/templates/engine.ts", "../../../../src/client/components/core/SkyeResponsiveComponent.ts"],
  "sourcesContent": ["// Types\ntype ReactiveTarget<T> = T;\ntype EffectFn = () => void;\ntype SuspendedEffect = {\n  fn: EffectFn;\n  target: ReactiveTarget<any>;\n  prop: string | symbol;\n};\n\n// Dependency Tracker\nconst targetMap = new WeakMap<ReactiveTarget<any>, Map<any, Set<EffectFn>>>();\nconst reactiveMap = new WeakMap<object, any>();\n\nlet activeEffect: EffectFn | null = null;\nlet suspendedEffects: SuspendedEffect[] = [];\n\nfunction track(target: ReactiveTarget<any>, prop: string | symbol): void {\n  if (activeEffect) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      depsMap = new Map();\n      targetMap.set(target, depsMap);\n    }\n    let dep = depsMap.get(prop);\n    if (!dep) {\n      dep = new Set<EffectFn>();\n      depsMap.set(prop, dep);\n    }\n    dep.add(activeEffect);\n  } \n}\n\nfunction trigger(target: ReactiveTarget<any>, prop: string | symbol): void {\n  const depsMap = targetMap.get(target);\n  if (depsMap) {\n    const effects = depsMap.get(prop);\n    if (effects) {\n      effects.forEach(runEffect);\n    }\n  }\n}\n\nfunction runEffect(effect: EffectFn): void {\n  try {\n    activeEffect = effect;\n    effect();\n  } catch (error) {\n    if (error instanceof Promise) {\n      suspendedEffects.push({ fn: effect, target: null!, prop: null! });\n      error.then(() => {\n        const index = suspendedEffects.findIndex(e => e.fn === effect);\n        if (index !== -1) {\n          suspendedEffects.splice(index, 1);\n        }\n        runEffect(effect);\n      });\n    } else {\n      console.error(\"Effect error:\", error);\n    }\n  } finally {\n    activeEffect = null;\n  }\n}\n\nexport function reactive<T extends object>(target: T): T {\n  if (reactiveMap.has(target)) {\n    return reactiveMap.get(target);\n  }\n\n  const handler: ProxyHandler<T> = {\n    get(obj: T, prop: string | symbol, receiver: any) {\n      const result = Reflect.get(obj, prop, receiver);\n      track(obj, prop);\n      return result;\n    },\n    set(obj: T, prop: string | symbol, value: any, receiver: any) {\n      const oldValue = Reflect.get(obj, prop, receiver);\n      const result = Reflect.set(obj, prop, value, receiver);\n      if (oldValue !== value) {\n        trigger(obj, prop);\n      }\n      return result;\n    },\n  };\n\n  const proxy = new Proxy(target, handler);\n  reactiveMap.set(target, proxy);\n  return proxy;\n}\n\nexport function effect(effects: { [key: string]: EffectFn }): void {\n  Object.values(effects).forEach(runEffect);\n}\n\nexport async function rerender(): Promise<void> {\n  const maxIterations = 10; // Prevent infinite loops\n  let iterations = 0;\n  \n  while (suspendedEffects.length > 0 && iterations < maxIterations) {\n    const currentSuspended = [...suspendedEffects];\n    suspendedEffects = [];\n\n    await Promise.all(\n      currentSuspended.map(async ({ fn }) => {\n        await Promise.resolve();\n        runEffect(fn);\n      })\n    );\n\n    iterations++;\n  }\n\n  if (iterations === maxIterations) {\n    console.warn('Max iterations reached in rerender. There might be an infinite loop.');\n  }\n}", "export function parseTemplate(template: string, state: Record<string, any> = {}): DocumentFragment {\n  const fragment = document.createDocumentFragment();\n  const tokens = template.split(\"\"); // Tokenize as you preferred\n\n  let currentToken = '';\n  const elements: string[] = [];\n\n  tokens.forEach(char => {\n    currentToken += char;\n\n    // Detect the end of an expression block (e.g., {{ expression }})\n    if (currentToken.endsWith('}}')) {\n      elements.push(currentToken); // Push the full expression token\n      currentToken = ''; // Reset the current token\n    }\n    else if (char === ' ' || char === '\\n' || char === '\\t') {\n      elements.push(currentToken); // Push the plain text token\n      currentToken = ''; // Reset the current token\n    }\n  });\n\n  // Process elements and bind to state, appending to the DocumentFragment\n  elements.forEach(token => {\n    if (token.startsWith('{{') && token.endsWith('}}')) {\n      // Extract expression and evaluate it with the current state\n      const expression = token.slice(2, -2).trim();\n      const value = new Function(...Object.keys(state), `return ${expression};`)(...Object.values(state));\n      const textNode = document.createTextNode(value); // Create text node with the evaluated value\n      fragment.appendChild(textNode);\n    } else {\n      // Handle plain text tokens\n      const textNode = document.createTextNode(token);\n      fragment.appendChild(textNode);\n    }\n  });\n\n  return fragment;\n}\n\n// Example of handling expressions naturally without regexes\nconst expressionCache = new Map<string, any>();\n\nexport function handleExpressionMemoized(token: string, state: Record<string, any>) {\n  const expression = token.slice(2, -2).trim();\n  \n  if (expressionCache.has(expression)) {\n    return expressionCache.get(expression);\n  }\n\n  const result = new Function(...Object.keys(state), `return ${expression};`)(...Object.values(state));\n  expressionCache.set(expression, result);\n  return result;\n}\n\n// Example of handling conditionals\nexport function isConditional(token: string) {\n  // You can adjust this to your tokenizing logic\n  return token.includes(\"if (\");\n}\n\nexport function handleCondition(token: string) {\n  // Handle the conditional logic\n  const conditionStart = token.indexOf(\"if (\");\n  const conditionEnd = token.indexOf(\")\");\n  if (conditionStart !== -1 && conditionEnd !== -1) {\n    const condition = token.slice(conditionStart + 3, conditionEnd).trim();\n    return `{ if (${condition}) {`; // Transform into an inline if statement\n  }\n  return token;\n}\n\n// Example of handling loops\nexport function isLoop(token: string) {\n  return token.includes(\"for (\");\n}\n\nexport function handleLoop(token: string) {\n  const loopStart = token.indexOf(\"for (\");\n  const loopEnd = token.indexOf(\")\");\n  if (loopStart !== -1 && loopEnd !== -1) {\n    const loop = token.slice(loopStart + 4, loopEnd).trim();\n    return `{ for (${loop}) {`; // Transform into an inline for loop\n  }\n  return token;\n}\n", "import { effect, reactive } from \"../../reactivity/reactive.ts\";\nimport { parseTemplate } from \"../../templates/engine.ts\";\n\nexport class SkyeResponsiveComponent extends HTMLElement {\n    state: any;\n    responsive: boolean;\n  \n    constructor(initialState = {}, responsive = true) {\n      super();\n      this.state = reactive(initialState);\n      this.responsive = responsive; // Developers can opt in/out\n      this.handleResize = this.handleResize.bind(this);\n    }\n  \n    connectedCallback() {\n      this.render();\n  \n      if (this.responsive) {\n        globalThis.addEventListener('resize', this.handleResize);\n        this.handleResize();\n      }\n  \n      effect({\n        render: () => this.render(),\n      });\n      this.setupAccessibility();\n    }\n  \n    disconnectedCallback() {\n      if (this.responsive) {\n        globalThis.removeEventListener('resize', this.handleResize);\n      }\n    }\n  \n    render() {\n      const template = this.autoParseTemplate();\n      this.innerHTML = '';\n      this.appendChild(template);\n    }\n  \n    autoParseTemplate(): DocumentFragment {\n      return parseTemplate(this.template());\n    }\n  \n    template(): string {\n      // To be overridden by child components\n      return '';\n    }\n  \n    handleResize() {\n      // Default behavior can be extended by developers\n      const width = globalThis.innerWidth;\n  \n      if (width < 768) {\n        this.classList.add('mobile');\n      } else if (width >= 768 && width < 1024) {\n        this.classList.add('tablet');\n      } else {\n        this.classList.add('desktop');\n      }\n    }\n  \n    setupAccessibility() {\n      if (!this.getAttribute('role')) {\n        this.setAttribute('role', 'region');\n      }\n    }\n  }\n  \n  customElements.define('skye-responsive-component', SkyeResponsiveComponent);"],
  "mappings": "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",
  "names": ["effect"]
}
