{
  "version": 3,
  "sources": ["../../../../../src/client/components/core/functions/mixins/compose.ts", "../../../../../src/client/components/core/functions/mixins/Responsive.ts", "../../../../../src/client/reactivity/reactive.ts", "../../../../../src/client/templates/engine.ts", "../../../../../src/client/components/core/SkyeComponent.ts", "../../../../../src/client/components/core/layout/SkyeSpacing.ts"],
  "sourcesContent": ["// src/mixins/composeMixins.ts\n\nexport function composeMixins<T extends new (...args: any[]) => any>(\n    Base: T,\n    ...mixins: ((Base: T) => T)[]\n  ): T {\n    return mixins.reduce((accumulator, mixin) => mixin(accumulator), Base);\n  }", "// src/mixins/Responsive.ts\n\nimport { SkyeComponent } from \"../../SkyeComponent.ts\";\nimport { type Constructor } from \"../../SkyeComponent.ts\";\n\nfunction Responsive<TBase extends Constructor<SkyeComponent>>(Base: TBase) {\n  return class ResponsiveComponent extends Base {\n    private resizeObserver!: ResizeObserver;\n\n    override connectedCallback(): void {\n      super.connectedCallback && super.connectedCallback();\n      this.setupResponsiveness();\n    }\n\n    override disconnectedCallback(): void {\n      super.disconnectedCallback && super.disconnectedCallback();\n      this.cleanupResponsiveness();\n    }\n\n    private setupResponsiveness(): void {\n      this.resizeObserver = new ResizeObserver(() => this.handleResize());\n      this.resizeObserver.observe(this);\n\n      // Apply initial styles\n      this.handleResize();\n    }\n\n    private cleanupResponsiveness(): void {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n      }\n    }\n\n    private handleResize(): void {\n      const width = this.clientWidth;\n\n      // Define breakpoints and styles\n      const styles = [\n        { max: 599, fontSize: \"12px\", padding: \"4px\" },\n        { min: 600, max: 959, fontSize: \"14px\", padding: \"8px\" },\n        { min: 960, max: 1279, fontSize: \"16px\", padding: \"12px\" },\n        { min: 1280, max: 1919, fontSize: \"18px\", padding: \"16px\" },\n        { min: 1920, fontSize: \"20px\", padding: \"20px\" },\n      ];\n\n      // Find the matching style\n      let appliedStyle = styles[0]; // Default to the smallest breakpoint\n      for (const style of styles) {\n        if (\n          (style.min === undefined || width >= style.min) &&\n          (style.max === undefined || width <= style.max)\n        ) {\n          appliedStyle = style;\n          break;\n        }\n      }\n\n      // Apply styles directly\n      this.style.fontSize = appliedStyle.fontSize;\n      this.style.padding = appliedStyle.padding;\n    }\n  };\n}\n\nexport { Responsive };", "let activeEffect: Effect | null = null;\nconst effectStack: Effect[] = [];\n\nclass Dep {\n  subscribers: Set<Effect> = new Set();\n\n  depend() {\n    if (activeEffect) {\n      this.subscribers.add(activeEffect);\n      activeEffect.deps.add(this);\n    }\n  }\n\n  notify() {\n    const effects = Array.from(this.subscribers); // Collect subscribers\n\n    for (const effect of effects) {\n      if (effect.suspended) {\n        effect.resume();\n      } else {\n        effect.run();\n      }\n    }\n  }\n}\n\ntype EffectFnType = () => void | Promise<void>;\n\nclass Effect {\n  key: string;\n  fn: EffectFnType;\n  deps: Set<Dep> = new Set();\n  active: boolean = true;\n  suspended: boolean = false;\n  allowMutate: boolean = true;\n  running: boolean = false; // Add this line\n\n  constructor(fn: EffectFnType, key?: string) {\n    this.key = key || \"default\";\n    this.fn = fn;\n  }\n\n  run() {\n    if (!this.active || this.running) return; // Prevent re-entrant execution\n\n    this.running = true; // Set running to true\n\n    cleanupEffect(this);\n\n    try {\n      effectStack.push(this);\n      activeEffect = this;\n      this.allowMutate = false;\n\n      const result = this.fn();\n\n      if (result instanceof Promise) {\n        this.suspend();\n        result.finally(() => {\n          this.resume();\n        });\n      }\n    } finally {\n      this.allowMutate = true;\n      this.running = false; // Set running to false\n      effectStack.pop();\n      activeEffect = effectStack[effectStack.length - 1] || null;\n    }\n  }\n\n  suspend() {\n    this.suspended = true;\n  }\n\n  resume() {\n    if (this.suspended) {\n      this.suspended = false;\n    }\n  }\n\n  stop() {\n    if (this.active) {\n      cleanupEffect(this);\n      this.active = false;\n    }\n  }\n}\n\nfunction cleanupEffect(effect: Effect) {\n  effect.deps.forEach((dep) => {\n    dep.subscribers.delete(effect);\n  });\n  effect.deps.clear();\n}\nexport function effect(\n  fnOrEffects:\n    | (() => void | Promise<void>)\n    | { [key: string]: () => void | Promise<void> }\n): () => void {\n  let effectInstances: Effect[] = [];\n\n  if (typeof fnOrEffects === \"function\") {\n    // Single function\n    const effectInstance = new Effect(fnOrEffects, \"default\");\n    effectInstance.run();\n    effectInstances = [effectInstance];\n  } else {\n    // Object of functions\n    effectInstances = Object.entries(fnOrEffects).map(([key, fn]) => {\n      const effectInstance = new Effect(fn, key);\n      effectInstance.run();\n      return effectInstance;\n    });\n  }\n\n  return () => {\n    effectInstances.forEach((effectInstance) => effectInstance.stop());\n  };\n}\n\nexport function reactive<T extends object>(target: T): T {\n  const depMap = new Map<PropertyKey, Dep>();\n\n  const proxy = new Proxy(target, {\n    get(obj, prop: PropertyKey, receiver) {\n      let dep = depMap.get(prop);\n      if (!dep) {\n        dep = new Dep();\n        depMap.set(prop, dep);\n      }\n      dep.depend();\n      return Reflect.get(obj, prop, receiver);\n    },\n    set(obj, prop: PropertyKey, value, receiver) {\n      if (activeEffect && !activeEffect.allowMutate) {\n        throw new Error(\n          `Cannot mutate reactive state during effect execution.`\n        );\n      }\n\n      const oldValue = Reflect.get(obj, prop, receiver);\n      const result = Reflect.set(obj, prop, value, receiver);\n\n      if (oldValue !== value) {\n        const dep = depMap.get(prop);\n        if (dep) {\n          dep.notify();\n        }\n      }\n      return result;\n    },\n    // Other traps if needed\n  });\n\n  return proxy;\n}\n", "import { effect } from \"../reactivity/reactive.ts\";\n\nexport function parseTemplate(template: string, state: Record<string, any> = {}): DocumentFragment {\n  const fragment = document.createDocumentFragment();\n  const bindings: Array<{ node: Text; expression: string }> = [];\n\n  let index = 0;\n  const length = template.length;\n\n  while (index < length) {\n    const openIndex = template.indexOf('{{', index);\n\n    if (openIndex === -1) {\n      // Append remaining text\n      const text = template.slice(index);\n      fragment.appendChild(document.createTextNode(text));\n      break;\n    }\n\n    // Append text before the expression\n    if (openIndex > index) {\n      const text = template.slice(index, openIndex);\n      fragment.appendChild(document.createTextNode(text));\n    }\n\n    // Find the closing '}}'\n    const closeIndex = template.indexOf('}}', openIndex + 2);\n    if (closeIndex === -1) {\n      // No closing '}}', append the rest as text\n      const text = template.slice(openIndex);\n      fragment.appendChild(document.createTextNode(text));\n      break;\n    }\n\n    // Extract and evaluate the expression\n    const expression = template.slice(openIndex + 2, closeIndex).trim();\n    const textNode = document.createTextNode('');\n    fragment.appendChild(textNode);\n\n    // Evaluate and set initial value\n    updateTextNode(textNode, expression, state);\n\n    // Keep track of bindings for reactivity\n    bindings.push({ node: textNode, expression });\n\n    // Move the index past the closing '}}'\n    index = closeIndex + 2;\n  }\n\n  // Set up reactivity for each binding\n  bindings.forEach(({ node, expression }) => {\n    effect({\n      update() {\n        updateTextNode(node, expression, state);\n      },\n    });\n  });\n\n  return fragment;\n}\n\nfunction updateTextNode(node: Text, expression: string, state: Record<string, any>) {\n  try {\n    const value = new Function(...Object.keys(state), `return ${expression};`)(...Object.values(state));\n    node.textContent = value;\n  } catch (error) {\n    console.error(`Error evaluating expression \"${expression}\":`, error);\n    node.textContent = '';\n  }\n}\n\nexport function html(strings: string[], ...expressions: any[]) {\n  // Combine strings and expressions\n  let result = '';\n  for (let i = 0; i < strings.length; i++) {\n    result += strings[i];\n    if (i < expressions.length) {\n      const expr = expressions[i];\n      // If the expression is a function, execute it\n      if (typeof expr === 'function') {\n        result += expr();\n      } else {\n        result += expr;\n      }\n    }\n  }\n  return result;\n}\n\nexport function parseTemplateString(templateString: string) {\n  // Create a template element\n  const template = document.createElement('template');\n  template.innerHTML = templateString.trim();\n\n  // Return the content of the template as a DocumentFragment\n  return template.content.cloneNode(true);\n}", "import { effect, reactive } from \"../../reactivity/reactive.ts\";\nimport { parseTemplateString } from \"../../templates/engine.ts\";\n\nexport class SkyeComponent extends HTMLElement {\n  state: any;\n  private cleanupTasks: Array<() => void> = [];\n\n  constructor() {\n    super();\n    this.state = reactive({});\n  }\n\n  connectedCallback(): void {\n    // Set up the reactive effect and get the cleanup function\n    const cleanupRenderEffect = effect(() => this.render());\n\n    // Automatically clean up the effect on disconnect\n    this.addCleanupTask(cleanupRenderEffect);\n  }\n\n  disconnectedCallback(): void {\n    // Execute all cleanup tasks\n    this.cleanupTasks.forEach((cleanup) => cleanup());\n    this.cleanupTasks = [];\n  }\n\n  render(): void {\n    const template = this.template();\n    const fragment = parseTemplateString(template);\n    this.innerHTML = '';\n    this.appendChild(fragment);\n  }\n\n  template(): string {\n    // To be overridden by subclasses\n    return '';\n  }\n\n  // Helper method to add a cleanup task\n  protected addCleanupTask(task: () => void): void {\n    this.cleanupTasks.push(task);\n  }\n\n  // Helper method to add event listeners with automatic cleanup\n  protected addEventListenerWithCleanup<K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    this.addEventListener(type, listener, options);\n    this.addCleanupTask(() => this.removeEventListener(type, listener, options));\n  }\n}\n\nexport type Constructor<T = {}> = new (...args: any[]) => T;", "import { composeMixins } from \"../functions/mixins/compose.ts\";\nimport { Responsive } from \"../functions/mixins/Responsive.ts\";\nimport { SkyeComponent } from \"../SkyeComponent.ts\";\n\nclass SkyeSpacing extends composeMixins(SkyeComponent, Responsive) {\n    override template(): string {\n      return `\n        <div class=\"spacing-container\" style=\"padding: var(--padding-md)\">\n          <slot></slot>\n        </div>\n      `;\n    }\n  \n    handleResize() {\n      const spacingContainer = this.querySelector('.spacing-container') as HTMLDivElement;\n  \n      if (globalThis.innerWidth < 768) {\n        spacingContainer.style.padding = 'var(--padding-sm)'; // Mobile padding\n      } else if (globalThis.innerWidth >= 768 && globalThis.innerWidth < 1024) {\n        spacingContainer.style.padding = 'var(--padding-md)'; // Tablet padding\n      } else {\n        spacingContainer.style.padding = 'var(--padding-lg)'; // Desktop padding\n      }\n    }\n  }\n  \n  customElements.define('skye-spacing', SkyeSpacing);"],
  "mappings": "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",
  "names": ["effect"]
}
